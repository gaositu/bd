localStorage.clear();
localStorage.setItem( 'v', '0.6' );
localStorage.setItem( 'f', '[]' );
localStorage.setItem( 'h', '[]' );
/*第一个css参数和属性*/
localStorage.setItem( '1_CSS 内边距', '元素的内边距在边框和内容区之间。控制该区域最简单的属性是 padding 属性。CSS padding 属性定义元素边框与元素内容之间的空白区域。' );
localStorage.setItem( '1_CSS 内边距', 'css3' );
localStorage.setItem( '1_CSS 背景', 'css4' );
localStorage.setItem( '1_CSS 文本', 'css5' );
localStorage.setItem( '1_CSS 字体', 'css6' );
localStorage.setItem( '1_CSS 列表', 'css7' );
localStorage.setItem( '1_CSS 表格', 'css8' );
localStorage.setItem( '1_CSS 边框', 'css9' );
localStorage.setItem( '1_CSS 外边距', 'css10' );
localStorage.setItem( '1_CSS 外边距合并', 'css11' );
localStorage.setItem( '1_CSS 相对定位', 'relative 不脱离文档流，参考自身静态位置通过 top(上),bottom（下）,left（左）,right（右） 定位，并且可以通过z-index进行层次分级。' );
localStorage.setItem( '1_CSS 绝对定位', 'absolute 脱离文档流，通过 top,bottom,left,right 定位。选取其最近的父级定位元素，当父级 position 为 static 时，absolute元素将以body坐标原点进行定位，可以通过z-index进行层次分级。' );
localStorage.setItem( '1_CSS 静态定位', 'static 没有特别的设定，遵循基本的定位规定，不能通过z-index进行层次分级' );
localStorage.setItem( '1_CSS 固定定位', '当容器的position属性值为fixed时，这个容器即被固定定位了。 通过设置固定定位，将容器脱离了普通流，因此被固定定位的容器不会随着滚动条的拖动而变化位置。在视野中，固定定位的容器的位置是不会改变的。但是在IE6中不正常。' );
localStorage.setItem( '1_CSS 元素选择器', 'css16' );
localStorage.setItem( '1_CSS 浮动', 'css16' );

localStorage.setItem( '3_js 输出', 'javascript1' );
localStorage.setItem( '3_js 语句', 'javascript2' );
localStorage.setItem( '3_js 注释', 'javascript3' );
localStorage.setItem( '3_js 变量', 'javascript4' );
localStorage.setItem( '3_js 数据类型', 'javascript5' );
localStorage.setItem( '3_js 对象', 'javascript6' );
localStorage.setItem( '3_js 函数', 'javascript7' );
localStorage.setItem( '3_js 运算符', 'javascript8' );
localStorage.setItem( '3_js 比较', 'javascript9' );
localStorage.setItem( '3_js Switch', 'javascript30' );
localStorage.setItem( '3_js for循环', 'javascript33' );
localStorage.setItem( '3_js While循环', 'javascript32' );
localStorage.setItem( '3_js Break语句', 'javascript33' );
localStorage.setItem( '3_js 字符串', 'javascript34' );
localStorage.setItem( '3_js 数字', 'javascript35' );
localStorage.setItem( '3_js 日期', 'javascript36' );
localStorage.setItem( '3_js 数组', 'javascript36' );
localStorage.setItem( '3_js 逻辑', 'javascript36' );
localStorage.setItem( '3_js 算数', 'javascript36' );
localStorage.setItem( '3_js 正则表达式', 'javascript36' );

localStorage.setItem( '6_php 基本语法', 'php1' );
localStorage.setItem( '6_php 类型', 'php2' );
localStorage.setItem( '6_php 变量', 'php3' );
localStorage.setItem( '6_php 常量', 'php4' );
localStorage.setItem( '6_php 表达式', 'php5' );
localStorage.setItem( '6_php 运算符', 'php6' );
localStorage.setItem( '6_php 流程控制', 'php7' );
localStorage.setItem( '6_php 函数', 'php8' );
localStorage.setItem( '6_php 类与对象（PHP 4）', 'php9' );
localStorage.setItem( '6_php 类与对象（PHP 5）', 'php10' );
localStorage.setItem( '6_php 异常处理', 'php66' );
localStorage.setItem( '6_php 引用的解释', 'php62' );
localStorage.setItem( '6_php php的命令行模式', 'php63' );
localStorage.setItem( '6_php 连接处理', 'php64' );
localStorage.setItem( '6_php 文件上传处理', 'php65' );
