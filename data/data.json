var lsf = localStorage.getItem( 'f' );
var lsh = localStorage.getItem( 'h' );
localStorage.clear();
localStorage.setItem( 'f', lsf );
localStorage.setItem( 'h', lsh );
localStorage.setItem( 'v', '1.0' );
//- - - - - - - - - -
localStorage.setItem( '3_js闭包', '闭包就是内部函数通过某种方式使其可见范围超出了其定义的范围,这就产生了一个在其定义范围内的闭包.' );
localStorage.setItem( "5_HTML 5 音频","HTML5 规定了一种通过 audio 元素来包含音频的标准方法。audio 元素能够播放声音文件或者音频流。");localStorage.setItem( "5_HTML 5 拖放","拖放是一种常见的特性，即抓取对象以后拖到另一个位置。");localStorage.setItem( "5_HTML 5 Canvas","canvas 元素用于在网页上绘制图形。");localStorage.setItem( "5_HTML 5 内联 SVG","SVG 指可伸缩矢量图形 (Scalable Vector Graphics)SVG 用于定义用于网络的基于矢量的图形SVG 使用 XML 格式定义图形SVG 图像在放大或改变尺寸的情况下其图形质量不会有损失SVG 是万维网联盟的标准");localStorage.setItem( "5_HTML 5 Canvas vs. SV","Canvas 和 SVG 都允许您在浏览器中创建图形，但是它们在根本上是不同的。");localStorage.setItem( "5_HTML 5 地理定位","HTML5 Geolocation（地理定位）用于定位用户的位置。");localStorage.setItem( "5_HTML 5 Web 存储","在客户端存储数据HTML5 提供了两种在客户端存储数据的新方法: localStorage - 没有时间限制的数据存储sessionStorage - 针对一个 session 的数据存储");localStorage.setItem( "5_HTML 5 应用程序缓存","使用 HTML5，通过创建 cache manifest 文件，可以轻松地创建 web 应用的离线版本。");localStorage.setItem( "5_HTML 5 Web Workers","web worker 是运行在后台的 JavaScript，不会影响页面的性能。");localStorage.setItem( "5_HTML 5 服务器发送事件","HTML5 服务器发送事件（server-sent event）允许网页获得来自服务器的更新。");localStorage.setItem( "5_HTML 5 Input 类型","email,url,number,range,Date,pickers (date, month, week, time, datetime, datetime-local), search, color");localStorage.setItem( "5_HTML 5 表单元素","datalist,keygen,output");localStorage.setItem( "5_HTML 5 表单属性","新的 form 属性：autocomplete,novalidate。新的 input 属性：autocomplete,autofocus,form,form overrides (formaction, formenctype, formmethod, formnovalidate, formtarget),height 和 width,list,min, max 和 step,,multipl");localStorage.setItem( "5_HTML 5 浏览器支持 - 音频","Firefox 支持 Ogg Vorbis 和 WAV, Opera 支持 Ogg Vorbis 和 WAV, Safari 支持 MP3、AAC 和 MP4, Chrome 支持 Ogg Vorbis、MP3、WAV, AAC 和 MP4, Internet Explorer 9+ 支持 MP3、AAC 和 MP4,iOS 支持 MP3、AAC 和 MP4, Android 支持 AAC 和 M");localStorage.setItem( "5_HTML 5 浏览器支持 - 视频","Firefox 支持 Theora Ogg 和 WebM,Opera 支持 Theora Ogg 和 WebM,Safari 支持 MP4,Chrome 支持 Theora Ogg、MP4 和 WebM,Internet Explorer 9+ 支持 MP4 和 WebM （需要插件）,iOS 支持 MP4,Android 支持 MP4 和 WebM (2.3+)");localStorage.setItem( "5_HTML 5 MIME 类型","类似地添加视频支持：AddType video/webm webm AddType video/mp4 mp4 AddType video/ogg ogg AddType video/ogg ogv'+'<br />'+ '如果你没有权限访问服务器的 .htaccess 文件，那么你的控制板应该在某个地方能够允许你查看");localStorage.setItem( "5_HTML 5 文件转换","很可能你的客户给你发了一个媒体文件，你也从文件的后缀判断出它的 MIME 类型。不过，文件的编码不一定是正确的。比如，它可能是一个没有问题的 MP4 文件，但不知什么原因，有的浏览器就");localStorage.setItem( "5_HTML 5 MP4 文件在完全下载完后","通常 HTML5 的音视频播放器会允许媒体文件在完全下载之前就开始播放（只要有东西可放）。但有时候 MP4 文件只有等到整个文件下载完成才播放。这还是因为编码的问题。有时候 MP4 文件在编码");localStorage.setItem( "5_HTML 5 正确设置属性","这看起来是显而易见的，但奇怪的是，我在 Stack Overflow 上还是看到人们多次问到为什么当他们用一些（不再使用的）属性时，有些功能不起作用。一个典型的例子是给 <audio> 和 <video> 元素应用 a");localStorage.setItem( "5_HTML 5 Firefox 11+ 的","这是最近比较突出的一个问题。你可能已经注意到在 Firefox 11+ 下，音频播放器的音量控制消失了。当然，你可以设置静音，也可以用键盘的上下键来控制音量大小，但是音量控制的滑动条因为");localStorage.setItem( "5_HTML 5 需要插件","HTML5 在音频和视频方面的最大卖点之一便是你不需要任何第三方插件 （如 Flash）便可以播放媒体文件，只要浏览器支持 HTML5。不幸的是，在严格意义上，这并不正确。因为 Internet Explorer (9+) 和 S");localStorage.setItem( "5_HTML 5 视频和全屏显示","视频播放中，最常见的需求便是全屏播放，但在 HTML5 的功能特性中并未涉及到这一点。不过，一个独立的 Fullscreen API 正在讨论中，一部分主流浏览器会有实验性版本可用。下列浏览器在一定程");localStorage.setItem( "5_HTML 5 Internet Expl","如果你的 HTML5 视频（用 poster 属性）定义了预览图 ( poster image)，你可能会奇怪 IE 9 会完全忽略它，除非你把 preload 的属性设置为 none。IE 是最后一批支持 HTML5 的浏览器。我们已经适应了其它浏");localStorage.setItem( "2_css3是什么","CSS即层叠样式表（Cascading Stylesheet）。 在网页制作时采用CSS技术，可以有效地对页面的布局、字体、颜色、背景和其它效果实现更加精确的控制。 只要对相应的代码做一些简单的修改，就可以");localStorage.setItem( "2_Flexbox----伸缩布局盒","Flexbox(伸缩布局盒) 是 CSS3 中一个新的布局模式，为了现代网络中更为复杂的网页需求而设计。<br />Flexbox 由 伸缩容器 和 伸缩项目 组成。通过设置元素的 display 属性为 flex 或 inline-flex 可以得到一个伸缩容器。设置为 flex 的容器被渲染为一个块级元素，而设置为 inline-flex 的容器则渲染为一个行内元素。");localStorage.setItem( "6_PHP 简介","PHP 文件可包含文本、HTML 标签以及脚本。PHP 文件中的脚本可在服务器上执行。");localStorage.setItem( "2_Flexbox的优点","Flexbox通常能让我们更好的操作他的子元素布局，例如：&lt;br /&gt;1.如果元素容器没有足够的空间，我们无需计算每个元素的宽度，就可以设置他们在同一行；&lt;br /&gt;2.可以快速让他们布局在一列；&lt;br /&gt;3.可以方便让他们对齐容器的左、右、中间等；&lt;br /&gt;4.无需修改结构就可以改变他们的显示顺序；&lt;br /&gt;5.如果元素容器设置百分比和视窗大小改变，不用提心未指定元素的确切宽度而破坏布局，因为容器中的每个子元素都可以自动分配容器的宽度或高度的比例。");localStorage.setItem( "1_CSS 内边距","元素的内边距在边框和内容区之间。控制该区域最简单的属性是 padding 属性。CSS padding 属性定义元素边框与元素内容之间的空白区域。");localStorage.setItem( "1_CSS 背景","CSS 允许应用纯色作为背景，也允许使用背景图像创建相当复杂的效果。");localStorage.setItem( "1_CSS 文本","CSS 文本属性可定义文本的外观,您可以改变文本的颜色、字符间距，对齐文本，装饰文本，对文本进行缩进");localStorage.setItem( "1_CSS 字体","CSS 字体属性定义文本的字体系列、大小、加粗、风格（如斜体）和变形（如小型大写字母）。");localStorage.setItem( "1_CSS 列表","CSS 列表属性允许你放置、改变列表项标志，或者将图像作为列表项标志。");localStorage.setItem( "1_CSS 表格","CSS 表格属性可以帮助您极大地改善表格的外观。");localStorage.setItem( "1_CSS 边框","元素的边框 (border) 是围绕元素内容和内边距的一条或多条线。");localStorage.setItem( "1_CSS 外边距合并","外边距合并指的是，当两个垂直外边距相遇时，它们将形成一个外边距。合并后的外边距的高度等于两个发生合并的外边距的高度中的较大者。");localStorage.setItem( "1_CSS 相对定位","relative 不脱离文档流，参考自身静态位置通过 top(上),bottom（下）,left（左）,right（右） 定位，并且可以通过z-index进行层次分级。");localStorage.setItem( "1_CSS 绝对定位","absolute 脱离文档流，通过 top,bottom,left,right 定位。选取其最近的父级定位元素，当父级 position 为 static 时，absolute元素将以body坐标原点进行定位，可以通过z-index进行层次分级。");localStorage.setItem( "1_CSS 静态定位","static 没有特别的设定，遵循基本的定位规定，不能通过z-index进行层次分级");localStorage.setItem( "1_CSS 固定定位","当容器的position属性值为fixed时，这个容器即被固定定位了。 通过设置固定定位，将容器脱离了普通流，因此被固定定位的容器不会随着滚动条的拖动而变化位置。在视野中，固定定位的容器的位置是不会改变的。但是在IE6中不正常。");localStorage.setItem( "1_CSS 元素选择器","最常见的 CSS 选择器是元素选择器。换句话说，文档的元素就是最基本的选择器。如果设置 HTML 的样式，选择器通常将是某个 HTML 元素，比如 p、h1、em、a，甚至可以是 html 本身：");localStorage.setItem( "1_CSS 浮动","浮动的框可以向左或向右移动，直到它的外边缘碰到包含框或另一个浮动框的边框为止。由于浮动框不在文档的普通流中，所以文档的普通流中的块框表现得就像浮动框不存在一样。");localStorage.setItem( "2_属性选择器","①[att=val]：其中att代表属性，val代表属性值(例如：div[id=section1]),这在CSS2中就有了，没什么稀奇的，接下来三个属性选择器是CSS3中新增加的，请往下看；       ②[att*=val]：匹配包含含有特定的值的属性的元素的属性的元素；       ③[att^=val]：匹配包含以特定的值开头的属性的元素；");localStorage.setItem( "2_属性选择器","[att$=val]：匹配包含以特定的值结尾的属性的元素；    另外注意：若遇到一些符号时要在符号前加上转义字符“”，如[id=section-header]{background:red;}浏览器支持:只有IE6不支持CSS的属性选择器。IE7和IE8、Opera、Webkit核心和Gecko核心的浏览器都支持。所以在你的样式中使用属性选择器是比较安全的。");localStorage.setItem( "2_伪元素选择器"," ①first-line：       ②first-letter：       ③before：       ④after：");localStorage.setItem( "2_结构性伪类选择器","1）四个基本的结构选择器root、not、empty和target：       ①root：       ②not：       ③empty：       ④target：     （2）选择器first-child、last-child、nth-child和nth-last-child：     （3）选择器nth-of-type和nth-last-of-type：         在这里有个问题：nth-child选择器在计算子元素是第奇数个元素还是第偶数个元素的时候，是连同父元素中的所有子元素一起计算的。使用它们替换：     （4）选择器only-child和only-of-type：       ①only-child：       ②only-of-type：     （5）循环使用样式：       nth-child、nth-last-child、nth-of-type和nth-last-of-type选择器可以用来循环使用样式浏览器支持: Webkit核心和Opera 浏览器支持所有新的CSS3 伪类，Firefox 3.5+支持伪类。Trident核心浏览器(Internet Explorer)事实上不支持这些伪选择器。");localStorage.setItem( "2_特性","1、圆角表格，对应属性：border-radius。&lt;br /&gt;2、以往对网页上的文字加特效只能用filter这个属性，这次CSS3中专门制订了一个加文字特效的属性，而且不止加阴影这种效果。对应属性：font-effect。&lt;br /&gt;3、丰富了对链接下划线的样式，以往的下划线都是直线，这次可不一样了，有波浪线、点线、虚线等等，更可对下划线的颜色和位置进行任意改变。（还有对应顶线和中横线的样式，效果与下划线类似）对应属性：text-underline-style，text-underline-color，text-underline-mode，text-underline-position。&lt;br /&gt;4、在文字下点几个点或打个圈以示重点，CSS3也开始加入了这项功能，这应该在某些特定网页上很有用。对应属性：font-emphasize-style和font-emphasize-position。");localStorage.setItem( "7_什么是数据库事务？","　数据库事务是指作为单个逻辑工作单元执行的一系列操作。设想网上购物的一次交易，其付款过程至少包括以下几步数据库操作：　　· 更新客户所购商品的库存信息　　· 保存客户付款信息--可能包括与银行系统的交互　　· 生成订单并且保存到数据库中　　· 更新用户相关信息，例如购物数量等等。正常的情况下，这些操作将顺利进行，最终交易成功，与交易相关的所有数据库信息也成功地更新。但是，如果在这一系列过程中任何一个环节出了差错，例如在更新商品库存信息时发生异常、该顾客银行帐户存款不足等，都将导致交易失败。一旦交易失败，数据库中所有信息都必须保持交易前的状态不变，比如最后一步更新用户信息时失败而导致交易失败，那么必须保证这笔失败的交易不影响数据库的状态--库存信息没有被更新、用户也没有付款，订单也没有生成。否则，数据库的信息将会一片混乱而不可预测。　数据库事务正是用来保证这种情况下交易的平稳性和可预测性的技术。");localStorage.setItem( "7_如下的SQL语句不允许出现在事务中？","ALTER DATABASE 修改数据库 BACKUP LOG 备份日志 CREATE DATABASE 创建数据库 DISK INIT 创建数据库或事务日志设备 DROP DATABASE 删除数据库 DUMP TRANSACTION 转储事务日志 LOAD DATABASE 装载数据库备份复本 LOAD TRANSACTION 装载事务日志备份复本 RECONFIGURE  更新使用 sp_configure 系统存储过程更改的配置选项的当前配置（sp_configure 结果集中的 config_value 列）值。RESTORE DATABASE 还原使用BACKUP命令所作的数据库备份 RESTORE LOG 还原使用BACKUP命令所作的日志备份 UPDATE STATISTICS 在指定的表或索引视图中，对一个或多个统计组（集合）有关键值分发的信息进行更新 除了这些语句以外，你可以在你的数据库事务中使用任何合法的SQL语句。");localStorage.setItem( "7_sql 学习？","表结构： CREATE TABLE [dbo].[student](     [id] [int] IDENTITY(1,1) NOT NULL,     [name] [nvarchar](100) NULL,     [age] [int] NULL,    [score] [int] NULL,  CONSTRAIN [PK_mvc_test2] PRIMARY KEY CLUSTERED  (     [id] ASC )WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY=OFF,ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY] ) ON [PRIMARY] GO 按年龄分组，查每个年龄的人数，而年龄要大于或等于19： select [age],COUNT(1) '人数'  from student   group by age  having age &gt;= 19 统计总分数：select [name],[score] from student  union all  select '总分',AVG([score]) from student 按id排序，查出第5到第6条记录： select top (2) * from student   where [id] not in    (select top (4) [id] from student) 把一个表的数据复制到另一个表： insert into book2 (Title,Content,CreatTime) (select top 200 Title,Content,CreatTime from book) 把一个表的数据更新到另一个表： update student set score=b.score from student a JOIN  tem_student b ON a.id=b.id ");
//- - - - - - - - - -
try{jsonp2()}catch(e){}